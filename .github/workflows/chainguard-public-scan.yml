on:
  push:
    branches:
      - main
  #schedule:
  #  - cron: '0 1 * * *'
concurrency: chainguard-public-scan
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
          path: chainguard-public-images
      - id: monopod
        run: |
          set -x
          cd chainguard-public-images/
          go build -o /tmp/monopod monopod.go
      - id: generate-matrix
        run: |
          set -x
          cd chainguard-public-images/ 
          echo "matrix=$(/tmp/monopod matrix)" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - name: woo
        run: |
          set -x
          echo '${{ matrix }}'
